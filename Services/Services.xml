<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Services</name>
    </assembly>
    <members>
        <member name="T:Services.Common.StringManipulation">
            <summary>
            String Manipulation
            </summary>
        </member>
        <member name="M:Services.Common.StringManipulation.NormalizeName(System.String)">
            <summary>
            Capitalize the first letter in a string and make the rest lowercase
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Services.PaymentService">
            <summary>
            Handles the payment business logic
            </summary>
        </member>
        <member name="M:Services.PaymentService.#ctor(Data.RmsContext)">
            <summary>
            Constuctor for the Payment Service
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Services.PaymentService.Add(Data.Models.Payment)">
            <summary>
            Adds a new Payment to the Database
            </summary>
            <param name="payment"></param>
        </member>
        <member name="M:Services.PaymentService.Get(System.Int32)">
            <summary>
            Returns a single payment, specified by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Services.PaymentService.GetAll">
            <summary>
            Returns all payment records ordered by date in descending order
            </summary>
            <returns>All the Payments</returns>
        </member>
        <member name="M:Services.PaymentService.GetAllFromTenant(System.Int32)">
            <summary>
            All payments from a specific tenant
            </summary>
            <param name="tenantId"></param>
            <returns></returns>
        </member>
        <member name="M:Services.PaymentService.GetPaymentSum(System.Int32)">
            <summary>
            Get the sum of all payments made by a specific tenant
            </summary>
            <param name="tenantId"></param>
            <returns></returns>
        </member>
        <member name="M:Services.PaymentService.GetAllFromMonth(System.Int32)">
            <summary>
            Get all payments made on a specific month
            </summary>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:Services.PaymentService.GetAmountFromMonth(System.Int32)">
            <summary>
            Get sum of payments made on a specific month
            </summary>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:Services.PaymentService.GetAmountFromYear(System.Int32)">
            <summary>
            Get sum of payments made from a specific year
            </summary>
            <param name="year"></param>
            <returns></returns>
        </member>
        <member name="M:Services.PaymentService.GetAmountFromAllTime">
            <summary>
            Get the sum of all payments, regardless of the date
            </summary>
            <returns></returns>
        </member>
        <member name="M:Services.PaymentService.GetPaymentsAmount(System.Collections.Generic.IEnumerable{Data.Models.Payment})">
            <summary>
            Get the sum of money from a list of payments
            </summary>
            <param name="payments"></param>
            <returns></returns>
        </member>
        <member name="T:Services.PropertyService">
            <summary>
            Handles the property business logic
            </summary>
        </member>
        <member name="M:Services.PropertyService.#ctor(Data.RmsContext)">
            <summary>
            Constuctor for the Property Service
            </summary>
            <param name="context">Database context</param>
        </member>
        <member name="M:Services.PropertyService.Add(Data.Models.Property)">
            <summary>
            Adds a new property to the Database
            </summary>
            <param name="property"></param>
        </member>
        <member name="M:Services.PropertyService.Get(System.Int32)">
            <summary>
            Returns a single property, specified by id
            </summary>
            <param name="id"></param>
            <returns>A property matching the id or null if none matches</returns>
        </member>
        <member name="M:Services.PropertyService.GetAll">
            <summary>
            Returns all property records
            </summary>
            <returns></returns>
        </member>
        <member name="M:Services.PropertyService.GetNumberOfProperties">
            <summary>
            Gets the number of all properties
            </summary>
            <returns></returns>
        </member>
        <member name="M:Services.PropertyService.Update(Data.Models.Property)">
            <summary>
            Update the values of a single property
            </summary>
            <param name="property"></param>
        </member>
        <member name="T:Services.TenantService">
            <summary>
            Handles most of the business logic, that has to do with the tenant
            </summary>
        </member>
        <member name="M:Services.TenantService.#ctor(Data.RmsContext,Data.IProperty,Data.IPayment)">
            <summary>
            Constructor for the class
            </summary>
            <param name="context">Database context</param>
            <param name="properties">Property service</param>
            <param name="payments">Payment service</param>
        </member>
        <member name="M:Services.TenantService.Add(Data.Models.Tenant,System.Int32)">
            <summary>
            Adds a new Tenant and links him to a property
            </summary>
            <param name="tenant">Tenant object</param>
            <param name="rentedPropertyId">Id for a rented property instance</param>
        </member>
        <member name="M:Services.TenantService.Get(System.Int32)">
            <summary>
            Get a single tenant by id
            </summary>
            <param name="id">Tenant id</param>
            <returns>Tenant with the corresponding id or null if not found</returns>
        </member>
        <member name="M:Services.TenantService.GetAll">
            <summary>
            Get all tenant records, except for the ones kicked out
            </summary>
            <returns>All tenants</returns>
        </member>
        <member name="M:Services.TenantService.GetAllFromProperty(System.Int32)">
            <summary>
            Get all tenant records from a specific property
            </summary>
            <param name="propertyId">Id of the property</param>
            <returns>All tenants found</returns>
        </member>
        <member name="M:Services.TenantService.GetMoneyOwed(System.Int32)">
            <summary>
            Calculate the debt of a single tenant
            </summary>
            <param name="tenantId">Id of the tenant</param>
            <returns>The amount of money owed</returns>
        </member>
        <member name="M:Services.TenantService.GetNumberOfTenants">
            <summary>
            Get the number of all tenant records
            </summary>
            <returns>Tenant count</returns>
        </member>
        <member name="M:Services.TenantService.IsEmailTaken(System.String)">
            <summary>
            Checks if there is a tenant with the given email
            </summary>
            <param name="email">The email being checked</param>
            <returns></returns>
        </member>
        <member name="M:Services.TenantService.GetNumberOfTenantsInProperty(System.Int32)">
            <summary>
            Get the number of all tenant records that occupy a given property
            </summary>
            <param name="propertyId">Id of the property</param>
            <returns>The number of tenants</returns>
        </member>
        <member name="M:Services.TenantService.HasPayments(System.Int32)">
            <summary>
            Check if a user has made any payments
            </summary>
            <param name="tenantId"></param>
            <returns></returns>
        </member>
        <member name="M:Services.TenantService.KickOut(System.Int32)">
            <summary>
            Set IsKickedOut to true
            </summary>
            <param name="id">Id of user getting kicked out</param>
        </member>
        <member name="M:Services.TenantService.Update(Data.Models.Tenant)">
            <summary>
            Update tenant data
            </summary>
            <param name="tenant"></param>
        </member>
        <member name="M:Services.TenantService.GetMonthsSinceLastPayment(System.Int32)">
            <summary>
            Get the number of months passed since a tenant's last payment
            </summary>
            <param name="tenantId"></param>
            <returns></returns>
        </member>
        <member name="M:Services.TenantService.GetMonthsSinceMovingIn(System.Int32)">
            <summary>
            Get the number of months passed since a tenant moved into a property
            </summary>
            <param name="tenantId"></param>
            <returns></returns>
        </member>
        <member name="M:Services.TenantService.CalculateMonthlyRent(System.Int32)">
            <summary>
            Divide the rent of the property equally between the tenants
            </summary>
            <param name="tenantId">Id of the tenant beign evaluated</param>
            <returns></returns>
        </member>
    </members>
</doc>
